#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

source "$HOME/.nvm/nvm.sh"

function process_directory() {
    echo "Entering $1"

    # 檢查該 DIR 當中有無 package-lock.json
    if [ -f "$1/package-lock.json" ]; then
      echo "Found package-lock.json in $1"
      # 在包含 package.json 的子目錄中執行 npm ci
      (cd "$1" && npm ci)
    fi

    for sub_dir in "$1"/*; do
        if [ -d "$sub_dir" ]; then
          # 如果 sub_dir 的名稱為 node_modules，則跳過
          if [ "$(basename "$sub_dir")" = "node_modules" ]; then
            continue
          fi
            process_directory "$sub_dir"
        fi
    done
}

# 檢查 nvm 是否安装
if command -v nvm &> /dev/null; then
  node_version="$(nvm version)"
  nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
      # 讀取 .nvmrc 文件中的 node 版本
      nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")
      if [ "$nvmrc_node_version" = "N/A" ]; then
        # 安裝 .nvmrc 文件中的 node 版本
        nvm install
      elif [ "$nvmrc_node_version" != "$node_version" ]; then
        # 切換到 .nvmrc 文件中的 node 版本
        nvm use
      fi

      # 安裝套件
      npm ci
      top_dir="./src"
      process_directory "$top_dir"

      # 執行打包
      npm run build

      git add -A
  
    elif [ "$node_version" != "$(nvm version default)" ]; then
      echo ".nvmrc not found"
    fi
else
  echo "nvm is not installed."
fi

